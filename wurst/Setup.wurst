package Setup
import ClosureEvents
import UnitIds

import CustomHeroAbility

let HERO_ID = compiletime(HERO_ID_GEN.next())

let customWindWalk = compiletime(new CustomHeroAbility(AbilityIds.windWalk))
let customMirrorImage = compiletime(new CustomHeroAbility(AbilityIds.mirrorImage))
let customCriticalStrike = compiletime(new CustomHeroAbility(AbilityIds.criticalStrike1))
let customShockWave = compiletime(new CustomHeroAbility(AbilityIds.shockwave2))
let customWarStomp = compiletime(new CustomHeroAbility(AbilityIds.warStomp1))
let customEnduranceAura = compiletime(new CustomHeroAbility(AbilityIds.enduranceAura1))

function add(CustomHeroAbility customHeroAbility, unit hero, int slot)
	customHeroAbility.add(hero, slot)

init
	let HERO = createUnit(players[0], HERO_ID, vec2(0,0), angle(0))
		..setLevel(10, false)

	print("Available commands: -add <ability> <slot>\nAvailable abilities: ww, mi, cs, sw, ws, ea\nAvailable slots: 1-4\n\nExample: -add ww 1")

	EventListener.add(EVENT_PLAYER_CHAT_FILTER) ->
		let message = EventData.getChatMessage()
		for ii = 1 to CustomHeroAbility.slots
			if message.contains("-add ") and message.contains(ii.toString())
				if message.contains("ww")
					add(customWindWalk, HERO, ii)
				else if message.contains("mi")
					add(customMirrorImage, HERO, ii)
				else if message.contains("cs")
					add(customCriticalStrike, HERO, ii)
				else if message.contains("sw")
					add(customShockWave, HERO, ii)
				else if message.contains("ws")
					add(customWarStomp, HERO, ii)
				else if message.contains("ea")
					add(customEnduranceAura, HERO, ii)

@compiletime function gen()
	new HeroDefinition(HERO_ID, UnitIds.archimonde)
		..setHeroAbilities(commaList(CustomHeroAbility.slotId[0], CustomHeroAbility.slotId[1], CustomHeroAbility.slotId[2], CustomHeroAbility.slotId[3]))